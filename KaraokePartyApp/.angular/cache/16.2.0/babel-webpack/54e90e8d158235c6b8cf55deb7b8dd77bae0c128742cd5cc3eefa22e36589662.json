{"ast":null,"code":"import _asyncToGenerator from \"C:/Windows/System32/myApp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _class;\nimport { map } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class YouTubeService {\n  constructor(http) {\n    this.http = http;\n    this.apiKey = 'AIzaSyBirflItHvoACBOXU47WyyVedAXy2HACJw';\n  }\n  //   searchVideos(query: string): Observable<any> {\n  //     const apiUrl = new URL('https://www.googleapis.com/youtube/v3/search');\n  //     apiUrl.searchParams.set('key', this.apiKey);\n  //     apiUrl.searchParams.set('q', query);\n  //     apiUrl.searchParams.set('type', 'video');\n  //     apiUrl.searchParams.set('part', 'snippet');\n  //     apiUrl.searchParams.set('maxResults', '1');\n  //     return this.http.get(apiUrl.toString());\n  // }\n  searchVideos(query, maxResults) {\n    const apiUrl = `https://www.googleapis.com/youtube/v3/search?key=${this.apiKey}&q=${query}&type=video&part=snippet&maxResults=${maxResults}`;\n    return this.http.get(apiUrl);\n  }\n  isVideoEmbeddable(videoId) {\n    const apiUrl = `https://www.googleapis.com/youtube/v3/videos?key=${this.apiKey}&id=${videoId}&part=status`;\n    return this.http.get(apiUrl).pipe(map(response => {\n      const status = response.items[0].status.embeddable;\n      return status === true;\n    }));\n  }\n  getTrendingVideos() {\n    const apiUrl = `https://www.googleapis.com/youtube/v3/videos?part=snippet&chart=mostPopular&maxResults=20&key=${this.apiKey}`;\n    return this.http.get(apiUrl);\n  }\n  getVideoIdByName(videoName) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      try {\n        const response = yield _this.searchVideos(videoName).toPromise();\n        if (response.items && response.items.length > 0) {\n          return response.items[0].id.videoId;\n        }\n        return null;\n      } catch (error) {\n        console.error('Greška prilikom dohvatanja videa:', error);\n        return null;\n      }\n    })();\n  }\n}\n_class = YouTubeService;\n_class.ɵfac = function YouTubeService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.HttpClient));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["map","YouTubeService","constructor","http","apiKey","searchVideos","query","maxResults","apiUrl","get","isVideoEmbeddable","videoId","pipe","response","status","items","embeddable","getTrendingVideos","getVideoIdByName","videoName","_this","_asyncToGenerator","toPromise","length","id","error","console","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Windows\\System32\\myApp\\src\\app\\components\\karaoke-room\\you-tube-service\\you-tube.service.ts"],"sourcesContent":["// youtube.service.ts\n\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, map } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class YouTubeService {\n  \n  private apiKey: string = 'AIzaSyBirflItHvoACBOXU47WyyVedAXy2HACJw';\n\n  constructor(private http: HttpClient) {}\n\n  //   searchVideos(query: string): Observable<any> {\n  //     const apiUrl = new URL('https://www.googleapis.com/youtube/v3/search');\n  //     apiUrl.searchParams.set('key', this.apiKey);\n  //     apiUrl.searchParams.set('q', query);\n  //     apiUrl.searchParams.set('type', 'video');\n  //     apiUrl.searchParams.set('part', 'snippet');\n  //     apiUrl.searchParams.set('maxResults', '1');\n  //     return this.http.get(apiUrl.toString());\n  // }\n\n  searchVideos(query: string, maxResults: number): Observable<any> {\n    const apiUrl = `https://www.googleapis.com/youtube/v3/search?key=${this.apiKey}&q=${query}&type=video&part=snippet&maxResults=${maxResults}`;\n    return this.http.get(apiUrl);\n  }\n\n  isVideoEmbeddable(videoId: string): Observable<boolean> {\n    const apiUrl = `https://www.googleapis.com/youtube/v3/videos?key=${this.apiKey}&id=${videoId}&part=status`;\n    return this.http.get(apiUrl).pipe(\n      map((response: any) => {\n        const status = response.items[0].status.embeddable;\n        return status === true;\n      })\n    );\n  }\n\n  getTrendingVideos(): Observable<any> {\n    const apiUrl = `https://www.googleapis.com/youtube/v3/videos?part=snippet&chart=mostPopular&maxResults=20&key=${this.apiKey}`;\n    return this.http.get(apiUrl);\n  }\n\n\n  async getVideoIdByName(videoName: string): Promise<string | null> {\n    try {\n      const response = await this.searchVideos(videoName).toPromise();\n      if (response.items && response.items.length > 0) {\n        return response.items[0].id.videoId;\n      }\n      return null;\n    } catch (error) {\n      console.error('Greška prilikom dohvatanja videa:', error);\n      return null;\n    }\n  }\n}\n"],"mappings":";;AAIA,SAAqBA,GAAG,QAAQ,MAAM;;;AAKtC,OAAM,MAAOC,cAAc;EAIzBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAW,yCAAyC;EAE3B;EAEvC;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEAC,YAAYA,CAACC,KAAa,EAAEC,UAAkB;IAC5C,MAAMC,MAAM,GAAG,oDAAoD,IAAI,CAACJ,MAAM,MAAME,KAAK,uCAAuCC,UAAU,EAAE;IAC5I,OAAO,IAAI,CAACJ,IAAI,CAACM,GAAG,CAACD,MAAM,CAAC;EAC9B;EAEAE,iBAAiBA,CAACC,OAAe;IAC/B,MAAMH,MAAM,GAAG,oDAAoD,IAAI,CAACJ,MAAM,OAAOO,OAAO,cAAc;IAC1G,OAAO,IAAI,CAACR,IAAI,CAACM,GAAG,CAACD,MAAM,CAAC,CAACI,IAAI,CAC/BZ,GAAG,CAAEa,QAAa,IAAI;MACpB,MAAMC,MAAM,GAAGD,QAAQ,CAACE,KAAK,CAAC,CAAC,CAAC,CAACD,MAAM,CAACE,UAAU;MAClD,OAAOF,MAAM,KAAK,IAAI;IACxB,CAAC,CAAC,CACH;EACH;EAEAG,iBAAiBA,CAAA;IACf,MAAMT,MAAM,GAAG,iGAAiG,IAAI,CAACJ,MAAM,EAAE;IAC7H,OAAO,IAAI,CAACD,IAAI,CAACM,GAAG,CAACD,MAAM,CAAC;EAC9B;EAGMU,gBAAgBA,CAACC,SAAiB;IAAA,IAAAC,KAAA;IAAA,OAAAC,iBAAA;MACtC,IAAI;QACF,MAAMR,QAAQ,SAASO,KAAI,CAACf,YAAY,CAACc,SAAS,CAAC,CAACG,SAAS,EAAE;QAC/D,IAAIT,QAAQ,CAACE,KAAK,IAAIF,QAAQ,CAACE,KAAK,CAACQ,MAAM,GAAG,CAAC,EAAE;UAC/C,OAAOV,QAAQ,CAACE,KAAK,CAAC,CAAC,CAAC,CAACS,EAAE,CAACb,OAAO;;QAErC,OAAO,IAAI;OACZ,CAAC,OAAOc,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAAC;QACzD,OAAO,IAAI;;IACZ;EACH;;SAhDWxB,cAAc;;mBAAdA,MAAc,EAAA0B,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;;SAAd7B,MAAc;EAAA8B,OAAA,EAAd9B,MAAc,CAAA+B,IAAA;EAAAC,UAAA,EAFb;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}