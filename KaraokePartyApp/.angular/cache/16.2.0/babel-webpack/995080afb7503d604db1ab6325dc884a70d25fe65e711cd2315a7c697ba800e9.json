{"ast":null,"code":"var _class;\nimport { map } from 'rxjs';\nimport { addVideoName } from 'src/app/store/video-names-store/video-names.actions';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngrx/store\";\nimport * as i2 from \"@angular/common/http\";\nexport class VideoNamesService {\n  constructor(store, http) {\n    this.store = store;\n    this.http = http;\n    this.jsonServerUrl = 'http://localhost:3000/videos';\n  }\n  addVideoName(ime) {\n    this.store.dispatch(addVideoName({\n      videoName: ime\n    }));\n  }\n  getAllVideoNames() {\n    console.log('imena');\n    return this.http.get(this.jsonServerUrl).pipe(map(data => data.map(item => item.name)));\n  }\n}\n_class = VideoNamesService;\n_class.ɵfac = function VideoNamesService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.Store), i0.ɵɵinject(i2.HttpClient));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["map","addVideoName","VideoNamesService","constructor","store","http","jsonServerUrl","ime","dispatch","videoName","getAllVideoNames","console","log","get","pipe","data","item","name","i0","ɵɵinject","i1","Store","i2","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Windows\\System32\\myApp\\src\\app\\services\\video-names-service\\video-names.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { map } from 'rxjs';\nimport { addVideoName } from 'src/app/store/video-names-store/video-names.actions';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class VideoNamesService {\n  private jsonServerUrl = 'http://localhost:3000/videos';\n  constructor(private store: Store, private http: HttpClient) {}\n\n  addVideoName(ime: string) {\n    this.store.dispatch(addVideoName({ videoName: ime }));\n  }\n  getAllVideoNames() {\n    console.log('imena');\n    return this.http\n      .get<string[]>(this.jsonServerUrl)\n      .pipe(map((data: any[]) => data.map((item) => item.name)));\n  }\n}\n"],"mappings":";AAGA,SAASA,GAAG,QAAQ,MAAM;AAC1B,SAASC,YAAY,QAAQ,qDAAqD;;;;AAKlF,OAAM,MAAOC,iBAAiB;EAE5BC,YAAoBC,KAAY,EAAUC,IAAgB;IAAtC,KAAAD,KAAK,GAALA,KAAK;IAAiB,KAAAC,IAAI,GAAJA,IAAI;IADtC,KAAAC,aAAa,GAAG,8BAA8B;EACO;EAE7DL,YAAYA,CAACM,GAAW;IACtB,IAAI,CAACH,KAAK,CAACI,QAAQ,CAACP,YAAY,CAAC;MAAEQ,SAAS,EAAEF;IAAG,CAAE,CAAC,CAAC;EACvD;EACAG,gBAAgBA,CAAA;IACdC,OAAO,CAACC,GAAG,CAAC,OAAO,CAAC;IACpB,OAAO,IAAI,CAACP,IAAI,CACbQ,GAAG,CAAW,IAAI,CAACP,aAAa,CAAC,CACjCQ,IAAI,CAACd,GAAG,CAAEe,IAAW,IAAKA,IAAI,CAACf,GAAG,CAAEgB,IAAI,IAAKA,IAAI,CAACC,IAAI,CAAC,CAAC,CAAC;EAC9D;;SAZWf,iBAAiB;;mBAAjBA,MAAiB,EAAAgB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,KAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,UAAA;AAAA;;SAAjBrB,MAAiB;EAAAsB,OAAA,EAAjBtB,MAAiB,CAAAuB,IAAA;EAAAC,UAAA,EAFhB;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}