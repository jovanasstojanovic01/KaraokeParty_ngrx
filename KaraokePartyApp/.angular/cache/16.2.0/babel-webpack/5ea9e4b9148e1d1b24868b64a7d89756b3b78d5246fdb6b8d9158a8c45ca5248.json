{"ast":null,"code":"var _class;\nimport { createEffect, ofType } from '@ngrx/effects';\nimport { merge, of } from 'rxjs';\nimport { catchError, map, switchMap } from 'rxjs/operators';\nimport * as SearchActions from './you-tube-store.actions';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngrx/effects\";\nimport * as i2 from \"../you-tube.service\";\nexport class YouTubeStoreEffects {\n  constructor(actions$, youtubeService) {\n    this.actions$ = actions$;\n    this.youtubeService = youtubeService;\n    this.search$ = createEffect(() => this.actions$.pipe(ofType(SearchActions.searchAction), switchMap(action => {\n      return merge(of(SearchActions.searchLoadingAction()),\n      // Pokreni loading indikator\n      this.youtubeService.searchVideos(action.query).pipe(map(response => {\n        const videoId = response.items[0].id.videoId;\n        return SearchActions.searchSuccessAction({\n          videoId\n        });\n      }), catchError(() => of({\n        type: 'Search Error'\n      }))));\n    })));\n  }\n}\n_class = YouTubeStoreEffects;\n_class.ɵfac = function YouTubeStoreEffects_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.Actions), i0.ɵɵinject(i2.YouTubeService));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac\n});","map":{"version":3,"names":["createEffect","ofType","merge","of","catchError","map","switchMap","SearchActions","YouTubeStoreEffects","constructor","actions$","youtubeService","search$","pipe","searchAction","action","searchLoadingAction","searchVideos","query","response","videoId","items","id","searchSuccessAction","type","i0","ɵɵinject","i1","Actions","i2","YouTubeService","factory","ɵfac"],"sources":["C:\\Windows\\System32\\myApp\\src\\app\\components\\karaoke-room\\you-tube-service\\you-tube-store\\you-tube-store.effects.ts"],"sourcesContent":["// search.effects.ts\r\n\r\nimport { Injectable } from '@angular/core';\r\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\r\nimport { merge, of } from 'rxjs';\r\nimport { catchError, map, switchMap } from 'rxjs/operators';\r\n\r\nimport * as SearchActions from './you-tube-store.actions';\r\nimport { YouTubeService } from '../you-tube.service';\r\n\r\n@Injectable()\r\nexport class YouTubeStoreEffects {\r\n  constructor(\r\n    private actions$: Actions,\r\n    private youtubeService: YouTubeService\r\n  ) {}\r\n\r\n  search$ = createEffect(() =>\r\n    this.actions$.pipe(\r\n      ofType(SearchActions.searchAction),\r\n      switchMap(action =>\r\n        {\r\n          return merge(\r\n          of(SearchActions.searchLoadingAction()), // Pokreni loading indikator\r\n          this.youtubeService.searchVideos(action.query).pipe(\r\n            map(response => {\r\n              const videoId = response.items[0].id.videoId;\r\n              return SearchActions.searchSuccessAction({ videoId });\r\n            }),\r\n            catchError(() => of({ type: 'Search Error' }))\r\n          )\r\n        );\r\n        }\r\n      )\r\n    )\r\n  );\r\n}\r\n"],"mappings":";AAGA,SAAkBA,YAAY,EAAEC,MAAM,QAAQ,eAAe;AAC7D,SAASC,KAAK,EAAEC,EAAE,QAAQ,MAAM;AAChC,SAASC,UAAU,EAAEC,GAAG,EAAEC,SAAS,QAAQ,gBAAgB;AAE3D,OAAO,KAAKC,aAAa,MAAM,0BAA0B;;;;AAIzD,OAAM,MAAOC,mBAAmB;EAC9BC,YACUC,QAAiB,EACjBC,cAA8B;IAD9B,KAAAD,QAAQ,GAARA,QAAQ;IACR,KAAAC,cAAc,GAAdA,cAAc;IAGxB,KAAAC,OAAO,GAAGZ,YAAY,CAAC,MACrB,IAAI,CAACU,QAAQ,CAACG,IAAI,CAChBZ,MAAM,CAACM,aAAa,CAACO,YAAY,CAAC,EAClCR,SAAS,CAACS,MAAM,IAAG;MAEf,OAAOb,KAAK,CACZC,EAAE,CAACI,aAAa,CAACS,mBAAmB,EAAE,CAAC;MAAE;MACzC,IAAI,CAACL,cAAc,CAACM,YAAY,CAACF,MAAM,CAACG,KAAK,CAAC,CAACL,IAAI,CACjDR,GAAG,CAACc,QAAQ,IAAG;QACb,MAAMC,OAAO,GAAGD,QAAQ,CAACE,KAAK,CAAC,CAAC,CAAC,CAACC,EAAE,CAACF,OAAO;QAC5C,OAAOb,aAAa,CAACgB,mBAAmB,CAAC;UAAEH;QAAO,CAAE,CAAC;MACvD,CAAC,CAAC,EACFhB,UAAU,CAAC,MAAMD,EAAE,CAAC;QAAEqB,IAAI,EAAE;MAAc,CAAE,CAAC,CAAC,CAC/C,CACF;IACD,CAAC,CACF,CACF,CACF;EApBE;;SAJQhB,mBAAmB;;mBAAnBA,MAAmB,EAAAiB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,OAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,cAAA;AAAA;;SAAnBtB,MAAmB;EAAAuB,OAAA,EAAnBvB,MAAmB,CAAAwB;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}