{"ast":null,"code":"var _class;\nimport { createEffect, ofType } from '@ngrx/effects';\nimport { switchMap, map } from 'rxjs/operators';\nimport { addVideoName, addVideoNameSuccess } from './video-names.actions';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngrx/effects\";\nimport * as i2 from \"@angular/common/http\";\nexport class VideoNamesEffects {\n  constructor(actions$, http) {\n    this.actions$ = actions$;\n    this.http = http;\n    this.jsonServerUrl = 'http://localhost:3000/videos';\n    this.addVideoName$ = createEffect(() => this.actions$.pipe(ofType(addVideoName), switchMap(action => this.http.post(this.jsonServerUrl, {\n      name: action.videoName\n    }).pipe(map(response => {\n      console.log('ovde sam');\n      return addVideoNameSuccess({\n        videoName: action.videoName\n      });\n    })))));\n  }\n}\n_class = VideoNamesEffects;\n_class.ɵfac = function VideoNamesEffects_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.Actions), i0.ɵɵinject(i2.HttpClient));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac\n});","map":{"version":3,"names":["createEffect","ofType","switchMap","map","addVideoName","addVideoNameSuccess","VideoNamesEffects","constructor","actions$","http","jsonServerUrl","addVideoName$","pipe","action","post","name","videoName","response","console","log","i0","ɵɵinject","i1","Actions","i2","HttpClient","factory","ɵfac"],"sources":["C:\\Windows\\System32\\myApp\\src\\app\\store\\video-names-store\\video-names.effects.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { switchMap, map } from 'rxjs/operators';\r\nimport { addVideoName, addVideoNameSuccess } from './video-names.actions';\r\n\r\n@Injectable()\r\nexport class VideoNamesEffects {\r\n  private jsonServerUrl = 'http://localhost:3000/videos';\r\n\r\n  constructor(private actions$: Actions, private http: HttpClient) {}\r\n\r\n  addVideoName$ = createEffect(() =>\r\n    this.actions$.pipe(\r\n      ofType(addVideoName),\r\n      switchMap((action) =>\r\n        this.http.post(this.jsonServerUrl, { name: action.videoName }).pipe(\r\n          map((response: any) => {\r\n            console.log('ovde sam');\r\n            return addVideoNameSuccess({ videoName: action.videoName });\r\n          })\r\n        )\r\n      )\r\n    )\r\n  );\r\n}\r\n"],"mappings":";AACA,SAAkBA,YAAY,EAAEC,MAAM,QAAQ,eAAe;AAE7D,SAASC,SAAS,EAAEC,GAAG,QAAQ,gBAAgB;AAC/C,SAASC,YAAY,EAAEC,mBAAmB,QAAQ,uBAAuB;;;;AAGzE,OAAM,MAAOC,iBAAiB;EAG5BC,YAAoBC,QAAiB,EAAUC,IAAgB;IAA3C,KAAAD,QAAQ,GAARA,QAAQ;IAAmB,KAAAC,IAAI,GAAJA,IAAI;IAF3C,KAAAC,aAAa,GAAG,8BAA8B;IAItD,KAAAC,aAAa,GAAGX,YAAY,CAAC,MAC3B,IAAI,CAACQ,QAAQ,CAACI,IAAI,CAChBX,MAAM,CAACG,YAAY,CAAC,EACpBF,SAAS,CAAEW,MAAM,IACf,IAAI,CAACJ,IAAI,CAACK,IAAI,CAAC,IAAI,CAACJ,aAAa,EAAE;MAAEK,IAAI,EAAEF,MAAM,CAACG;IAAS,CAAE,CAAC,CAACJ,IAAI,CACjET,GAAG,CAAEc,QAAa,IAAI;MACpBC,OAAO,CAACC,GAAG,CAAC,UAAU,CAAC;MACvB,OAAOd,mBAAmB,CAAC;QAAEW,SAAS,EAAEH,MAAM,CAACG;MAAS,CAAE,CAAC;IAC7D,CAAC,CAAC,CACH,CACF,CACF,CACF;EAdiE;;SAHvDV,iBAAiB;;mBAAjBA,MAAiB,EAAAc,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,OAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,UAAA;AAAA;;SAAjBnB,MAAiB;EAAAoB,OAAA,EAAjBpB,MAAiB,CAAAqB;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}